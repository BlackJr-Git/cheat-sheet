// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


// model User {
//   id            Int           @id @default(autoincrement())
//   email         String        @unique
//   name          String    
//   firstName     String
//   password      String?
//   createdAt     DateTime      @default(now())
//   deletedAt     DateTime?
//   role          String        @default("user")
//   favTools      UserTool[]
//   likedTools    LikedTool[]
// }

model Tool {
  id            Int           @id @default(autoincrement())
  title         String
  image         String
  description   String        
  url           String        
  images        ToolImage[]
  published     Boolean       @default(true)
  categories    ToolCategory[]
  userFav       UserTool[]
  userLikes     LikedTool[]
  createdAt     DateTime      @default(now())
  slug          String        @default("tool")
}

model ToolImage {
  id            Int           @id @default(autoincrement())
  url           String
  description   String?
  toolId        Int
  tool          Tool          @relation(fields: [toolId], references: [id])
  
  @@index([toolId])
}

model UserTool {
  userId        String
  toolId        Int
  user          User          @relation(fields: [userId], references: [id])
  tool          Tool          @relation(fields: [toolId], references: [id])

  @@id([userId, toolId])
  @@index([userId])
  @@index([toolId])
}

model LikedTool {
  userId        String
  toolId        Int
  user          User @relation(fields: [userId], references: [id])
  tool          Tool @relation(fields: [toolId], references: [id])

  @@id([userId, toolId])
  @@index([userId])
  @@index([toolId])
}

model Category {
  id            Int           @id @default(autoincrement())
  name          String
  icon          String
  tools         ToolCategory[]
  slug          String        @default("category")
}

model ToolCategory {
  toolId        Int
  categoryId    Int
  tool          Tool          @relation(fields: [toolId], references: [id])
  category      Category      @relation(fields: [categoryId], references: [id])

  @@id([toolId, categoryId])
  @@index([toolId])
  @@index([categoryId])
}


// model Account {
//   id                 String      @id @default(cuid())
//   userId             String
//   provider           String
//   providerAccountId  String
//   type               String
  
//   refresh_token      String?  // Optionnel
//   access_token       String?  // Optionnel
//   expires_at         Int?     // Optionnel
//   token_type         String?  // Optionnel
//   scope              String?  // Optionnel
//   id_token           String?  // Optionnel
//   session_state      String?  // Optionnel

//   user               User    @relation(fields: [userId], references: [id], onDelete: Cascade)

//   @@unique([provider, providerAccountId])
// }

model User {
  id            String   @id @default(uuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?

  favTools      UserTool[]
  likedTools    LikedTool[]

  // accounts      Account[]
  // sessions      Session[]
}

// model Session {
//   id           String   @id @default(cuid())
//   sessionToken String   @unique
//   userId       String
//   expires      DateTime

//   user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
// }

// model VerificationToken {
//   identifier String
//   token      String   @unique
//   expires    DateTime

//   @@unique([identifier, token])
// }